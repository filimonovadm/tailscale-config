Цель: Настроить VPN с помощью Tailscale, используя машину в Google Cloud как Exit Node

  Это позволяет выходить в интернет с домашнего компьютера так, как будто вы делаете это с сервера
  в Google Cloud.

  ---
  
  ## Часть 1: Настройка Exit Node

  ### 1. Настройка на сервере (Google Cloud VM)

  Эти шаги настраивают сервер, чтобы он мог быть exit node.

   1. Установка Tailscale:
      Выполняется команда, которая скачивает и запускает официальный установочный скрипт.
      ```bash
      curl -fsSL https://tailscale.com/install.sh | sh
      ```

   2. Запуск и аутентификация:
      Эта команда запускает Tailscale, объявляет машину как exit node и выдает ссылку для входа в
  аккаунт.
      ```bash
      sudo tailscale up --advertise-exit-node
      ```
      После выполнения нужно было перейти по сгенерированной ссылке в браузере, чтобы авторизовать
  сервер.

   3. Включение IP Forwarding:
      Exit node не будет работать, если на сервере отключена пересылка IP-пакетов. Мы включили её
  двумя командами:
       * Сначала добавили нужный параметр в конфигурацию системы:
         ```bash
         echo 'net.ipv4.ip_forward=1' | sudo tee -a /etc/sysctl.conf
         ```
       * Затем применили изменения без перезагрузки сервера:
         ```bash
         sudo sysctl -p
         ```

  ### 2. Настройка в админ-панели Tailscale

  После того как сервер настроен, его нужно "утвердить" как exit node.

   1. Перейдите в раздел Machines: https://login.tailscale.com/admin/machines
   2. Найдите в списке ваш сервер, нажмите на меню (три точки) и выберите `Edit route settings...`.
   3. Включите переключатель `Use as exit node`.

  ### 3. Настройка на домашнем ПК (или другом устройстве)

  Это финальный шаг, который направляет весь трафик вашего устройства через exit node.

   1. Установите клиент Tailscale на ваш домашний ПК.
   2. Войдите в тот же аккаунт Tailscale.
   3. Нажмите на иконку Tailscale в системном трее (рядом с часами).
   4. В меню найдите пункт `Exit Node`.
   5. В подменю выберите ваш сервер в Google Cloud.

  ---

  ## Часть 2: Управление конфигурацией через код (GitOps)

  Эти шаги позволяют управлять политиками доступа Tailscale через Git, что дает контроль версий, возможность ревью кода и автоматизацию.

  ### 1. Создание приватного репозитория на GitHub
   * Создайте **приватный** репозиторий на GitHub с именем `tailscale-config`.
   * Склонируйте его на локальный компьютер.

  ### 2. Создание файла политики (`policy.hujson`)
   * В корне репозитория создается файл `policy.hujson`.
   * Этот файл описывает все правила доступа (`grants`), группы (`groups`), хосты (`hosts`), правила SSH (`ssh`) и т.д. Он является "единственным источником правды" для конфигурации сети.

  ### 3. Настройка рабочего процесса GitHub Actions
   * В репозитории создается файл `.github/workflows/tailscale.yml`.
   * Этот файл содержит инструкцию для GitHub, которая автоматически тестирует и применяет изменения из `policy.hujson` в Tailscale при каждом `git push` в основную ветку.

  ### 4. Настройка секретов в GitHub
   Для того чтобы GitHub мог авторизоваться в Tailscale, в настройках репозитория на GitHub (`Settings` -> `Secrets and variables` -> `Actions`) нужно добавить два секрета:
    * `TS_API_KEY`: Генерируется в админ-панели Tailscale (`Settings` -> `Keys`). Ключ должен иметь права на чтение и запись (Read/Write).
    * `TS_TAILNET`: Имя вашей сети Tailscale (указано в верхнем левом углу админ-панели).

  ### 5. Блокировка редактора в Tailscale
   * В админ-панели Tailscale, в разделе `Access Controls`, нужно найти `Policy file management` и включить опцию `Prevent edits in the admin console`.
   * Это гарантирует, что все изменения будут проходить только через Git.

  ### 6. (Опционально) Создание публичного демо-репозитория
   * Для демонстрации навыков можно создать отдельный **публичный** репозиторий (например, `demo-tailscale-config`) с анонимизированными примерами файлов `policy.hujson` и `README.md`.